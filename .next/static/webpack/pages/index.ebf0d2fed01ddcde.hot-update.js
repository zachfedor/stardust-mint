"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/MainMint.js":
/*!***************************!*\
  !*** ./pages/MainMint.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MainMint; }\n/* harmony export */ });\n/* harmony import */ var _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/format.js */ \"./utils/format.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/web3-provider */ \"./node_modules/@walletconnect/web3-provider/dist/esm/index.js\");\n/* harmony import */ var _coinbase_wallet_sdk__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @coinbase/wallet-sdk */ \"./node_modules/@coinbase/wallet-sdk/dist/index.js\");\n/* harmony import */ var _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../artifacts/contracts/StardustGeneration.sol/StardustGeneration */ \"./artifacts/contracts/StardustGeneration.sol/StardustGeneration.json\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// import Head from \"next/head\";\n// import Image from \"next/image\";\n// import styles from \"../styles/MainMint.module.css\";\n// import WalletConnectProvider from '@walletconnect/web3-provider'\n\n// import WalletLink from 'walletlink'\n// import Web3Modal from 'web3modal'\n// import { ellipseAddress, getChainData } from '../lib/utilities'\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nvar _s = $RefreshSig$();\nvar contractAddress = \"0x3A6E628f8b6c83cB409c2c67cC42ceeCBA219046\";\nvar MerkleTree = (__webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\").MerkleTree);\nvar keccak256 = __webpack_require__(/*! keccak256 */ \"./node_modules/keccak256/dist/keccak256.js\");\nvar starlist = __webpack_require__(/*! ../scripts/starlist.js */ \"./scripts/starlist.js\");\nvar url = \"https://rinkeby.infura.io/v3/a530052483b945b182cb75fafdd4286f\";\nvar providerOptions = {\n    coinbasewallet: {\n        package: _coinbase_wallet_sdk__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n        options: {\n            appName: \"Stardust Generation\",\n            infuraId: \"https://rinkeby.infura.io/v3/a530052483b945b182cb75fafdd4286f\"\n        }\n    },\n    walletconnect: {\n        package: _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n        options: {\n            rpc: {\n                42: process.env.NEXT_PUBLIC_RPC_URL\n            }\n        }\n    }\n};\nfunction MainMint() {\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(1), mintAmount1 = ref[0], setMintAmount = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false), isConnected = ref1[0], setIsConnected = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false), hasMetamask = ref2[0], setHasMetamask = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(undefined), signer = ref3[0], setSigner = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), provider1 = ref4[0], setProvider = ref4[1];\n    // const [library, setLibrary] = useState();\n    var ref5 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), account = ref5[0], setAccount = ref5[1];\n    var ref6 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\"), error = ref6[0], setError = ref6[1];\n    var ref7 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), chainId1 = ref7[0], setChainId = ref7[1];\n    var ref8 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), network = ref8[0], setNetwork = ref8[1];\n    var web3Modal;\n    if (true) {\n        web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_3___default())({\n            network: 'rinkeby',\n            cacheProvider: true,\n            providerOptions: providerOptions\n        });\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        if (provider1 !== \"undefined\") {\n            setHasMetamask(true);\n        }\n    });\n    var connectWallet = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var ethereum, chainId, rinkebyChainId, web3ModalProvider, accounts, provider;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        ethereum = window.ethereum;\n                        if (ethereum) {\n                            _ctx.next = 5;\n                            break;\n                        }\n                        console.log('Metamask not detected');\n                        return _ctx.abrupt(\"return\");\n                    case 5:\n                        _ctx.next = 7;\n                        return ethereum.request({\n                            method: 'eth_chainId'\n                        });\n                    case 7:\n                        chainId = _ctx.sent;\n                        console.log('Connected to chain:' + chainId);\n                        rinkebyChainId = '0x4';\n                        _ctx.next = 12;\n                        return web3Modal.connect();\n                    case 12:\n                        web3ModalProvider = _ctx.sent;\n                        if (!(chainId !== rinkebyChainId)) {\n                            _ctx.next = 16;\n                            break;\n                        }\n                        alert('You are not connected to the Rinkeby Testnet!');\n                        return _ctx.abrupt(\"return\");\n                    case 16:\n                        _ctx.next = 18;\n                        return ethereum.request({\n                            method: 'eth_requestAccounts'\n                        });\n                    case 18:\n                        accounts = _ctx.sent;\n                        provider = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.providers.Web3Provider(web3ModalProvider);\n                        setSigner(provider.getSigner());\n                        console.log('Found account', accounts[0]);\n                        setAccount(accounts[0]);\n                        setIsConnected(true);\n                        _ctx.next = 29;\n                        break;\n                    case 26:\n                        _ctx.prev = 26;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log('Error connecting to metamask', _ctx.t0);\n                    case 29:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    26\n                ]\n            ]);\n        }));\n        return function connectWallet() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    // Checks if wallet is connected to the correct network\n    var checkCorrectNetwork = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var ethereum, chainId, rinkebyChainId;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        ethereum = window.ethereum;\n                        _ctx.next = 3;\n                        return ethereum.request({\n                            method: 'eth_chainId'\n                        });\n                    case 3:\n                        chainId = _ctx.sent;\n                        console.log('Connected to chain:' + chainId);\n                        rinkebyChainId = '0x4';\n                        if (chainId !== rinkebyChainId) {\n                            setCorrectNetwork(false);\n                        } else {\n                            setCorrectNetwork(true);\n                        }\n                    case 7:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function checkCorrectNetwork() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var handleDisconnect = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.next = 2;\n                        return web3Modal.clearCachedProvider();\n                    case 2:\n                        refreshState();\n                    case 3:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function handleDisconnect() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    // when we click mint amount\n    var handleDecrement = function() {\n        if (mintAmount1 <= 1) return;\n        setMintAmount(mintAmount1 - 1);\n    };\n    var handleIncrement = function() {\n        //for max number of mints this case is 3\n        if (mintAmount1 >= 7) return;\n        setMintAmount(mintAmount1 + 1);\n    };\n    var refreshState = function() {\n        setAccount();\n        setChainId();\n        setSigner();\n        setNetwork(\"\");\n    };\n    function handleStarlistMint(provider, mintAmount) {\n        return _handleStarlistMint.apply(this, arguments);\n    }\n    function _handleStarlistMint() {\n        _handleStarlistMint = // pass in proof? \n        _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(provider, mintAmount) {\n            var leaf, proof, isValid, nonce, tx, txHash;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (window.ethereum.selectedAddress) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", {\n                            success: false,\n                            status: 'To be able to mint, you need to connect your wallet'\n                        });\n                    case 2:\n                        leaf = keccak256(window.ethereum.selectedAddress);\n                        proof = merkleTree.getHexProof(leaf);\n                        isValid = merkleTree.verify(proof, leaf, root);\n                        if (isValid) {\n                            _ctx.next = 7;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", {\n                            success: false,\n                            status: 'Invalid Merkle Proof - You are not on the starlist'\n                        });\n                    case 7:\n                        _ctx.next = 9;\n                        return provider.getTransactionCount(window.ethereum.selectedAddress, 'latest');\n                    case 9:\n                        nonce = _ctx.sent;\n                        tx = {\n                            to: config.contractAddress,\n                            from: window.ethereum.selectedAddress,\n                            value: parseInt(web3.utils.toWei(String(config.cost * mintAmount), 'ether')).toString(16),\n                            data: nftContract.methods.mintStarlist(window.ethereum.selectedAddress, proof, mintAmount) // window.ethereum.selectedAddress as third param?\n                            .encodeABI(),\n                            nonce: nonce.toString(16)\n                        };\n                        _ctx.prev = 11;\n                        _ctx.next = 14;\n                        return window.ethereum.request({\n                            method: 'eth_sendTransaction',\n                            params: [\n                                tx\n                            ]\n                        });\n                    case 14:\n                        txHash = _ctx.sent;\n                        return _ctx.abrupt(\"return\", {\n                            success: true,\n                            status: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"a\", {\n                                href: \"https://etherscan.io/tx/\".concat(txHash),\n                                target: \"_blank\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                                        children: \"✅ Check out your transaction on Etherscan:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                        lineNumber: 188,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                                        children: \"https://etherscan.io/tx/\".concat(txHash)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                        lineNumber: 189,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                lineNumber: 187,\n                                columnNumber: 11\n                            }, this)\n                        });\n                    case 18:\n                        _ctx.prev = 18;\n                        _ctx.t0 = _ctx[\"catch\"](11);\n                        return _ctx.abrupt(\"return\", {\n                            success: false,\n                            status: \"😞 Oh my, something went wrong: \" + _ctx.t0.message\n                        });\n                    case 21:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, this, [\n                [\n                    11,\n                    18\n                ]\n            ]);\n        }));\n        return _handleStarlistMint.apply(this, arguments);\n    }\n    // async function handleReservelistMint(provider, mintAmount) {\n    //   if (typeof window.ethereum !== \"undefined\") {\n    //     const contract = new ethers.Contract(contractAddress, stardustGeneration.abi, signer);\n    //     try {\n    //       const response = await contract.mintReservelist(BigNumber.from(mintAmount), {\n    //         value: ethers.utils.parseEther((0.04 * mintAmount).toString()),\n    //       });\n    //       console.log(\"response: \", response);\n    //     } catch (err) {\n    //       console.log(\"error: \", err);\n    //     }\n    //   } else {\n    //     console.log(\"Please install MetaMask\");\n    //   }\n    // }\n    var handlePublicMint = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(provider, mintAmount) {\n            var web3, accounts, nftContract, contract1, response;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        web3 = new Web3(provider);\n                        _ctx.next = 3;\n                        return web3.eth.getAccounts();\n                    case 3:\n                        accounts = _ctx.sent;\n                        if (accounts.length) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", {\n                            success: false,\n                            status: 'To be able to mint, you need to connect your wallet'\n                        });\n                    case 6:\n                        nftContract = new web3.eth.Contract(contract.abi, config.contractAddress);\n                        if (!(typeof window.ethereum !== \"undefined\")) {\n                            _ctx.next = 21;\n                            break;\n                        }\n                        contract1 = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.Contract(contractAddress, _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__.abi, signer);\n                        _ctx.prev = 9;\n                        _ctx.next = 12;\n                        return contract1.mintPublic(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(mintAmount), {\n                            value: ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.utils.parseEther((0.04 * mintAmount).toString())\n                        });\n                    case 12:\n                        response = _ctx.sent;\n                        console.log(\"response: \", response);\n                        _ctx.next = 19;\n                        break;\n                    case 16:\n                        _ctx.prev = 16;\n                        _ctx.t0 = _ctx[\"catch\"](9);\n                        console.log(\"error: \", _ctx.t0);\n                    case 19:\n                        _ctx.next = 22;\n                        break;\n                    case 21:\n                        {\n                            console.log(\"Please install MetaMask\");\n                        }\n                    case 22:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    9,\n                    16\n                ]\n            ]);\n        // try {\n        //   await nftContract.methods.mintPublic( mintAmount ).estimateGas({\n        //     from: accounts[0],\n        //     value: valueBN.toString()\n        //   });\n        //   return {\n        //     success: true,\n        //     status: `Tx went through`\n        //     // status: (\n        //     //   <a href={`https://etherscan.io/tx/${txHash}`} target=\"_blank\">\n        //     //     <p>✅  Check out your transaction on Etherscan:</p>\n        //     //     <p>{`https://etherscan.io/tx/${txHash}`}</p>\n        //     //   </a>\n        //     // )\n        //   }\n        // } catch (error) {\n        //   return {\n        //     success: false,\n        //     status: `😞  Oh my, something went wrong` + error.message\n        //   }\n        // }\n        }));\n        return function handlePublicMint(provider, mintAmount) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    return(// <div className=\"main-mint\">\n    //   {hasMetamask ? (\n    //     isConnected ? (\n    //       <button onClick={disconnectWallet}>Disconnect</button>\n    //     ) : (\n    //       <button onClick={connectWallet}>Connect Wallet</button>\n    //     )\n    //   ) : (\n    //     \"Please install metamask\"\n    //   )}\n    // </div>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"text-center mt-8\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    children: hasMetamask ? isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                        onClick: handleDisconnect,\n                        children: \"Disconnect Wallet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                        lineNumber: 291,\n                        columnNumber: 15\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                        onClick: connectWallet,\n                        children: \"Connect Wallet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                        lineNumber: 295,\n                        columnNumber: 15\n                    }, this) : \"Please install metamask\"\n                }, void 0, false, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 288,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                lineNumber: 287,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"main-mint\",\n                children: isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"counter\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                    className: \"decrement-btn\",\n                                    onClick: handleDecrement\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 308,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", {\n                                    className: \"input\",\n                                    type: \"number\",\n                                    value: mintAmount1\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 312,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                    className: \"increment-btn\",\n                                    onClick: handleIncrement\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 313,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                            lineNumber: 307,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                            className: \"mint-button\",\n                            onClick: handlePublicMint,\n                            children: [\n                                \" \",\n                                \"MINT\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                            lineNumber: 318,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 306,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {}, void 0, false, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 324,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                lineNumber: 302,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true));\n}; // // import { useEffect, useState } from \"react\";\n // // // import { networkParams } from \"./networks\";\n // // import { toHex, truncateAddress } from \"../utils/format.js\";\n // // import { providerOptions, networkParams } from \"../utils/web3Wallet.js\";\n // import { ethers, BigNumber, providers } from \"ethers\";\n // import Web3Modal from \"web3modal\";\n // import CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n // import WalletConnect from \"@walletconnect/web3-provider\";\n // import { useRef, useEffect, useState } from \"react\";\n // // import { providers } from \"ethers\";\n // // import config from \"../dapp.config.js\";\n // import StardustGeneration from \"../artifacts/contracts/StardustGeneration.sol/StardustGeneration.json\";\n // const stardustAddress = \"0x3A6E628f8b6c83cB409c2c67cC42ceeCBA219046\";\n // export default function MainMint() {\n //   const [connectedWallet, setConnectedWallet] = useState(false);\n //   const [mintAmount, setMintAmount] = useState(1);\n //   const web3ModalRef = useRef(); // return the object with key named current\n //   // providers and signer  =>\n //   // providers is used for to get data from sc\n //   // signer is used for to sign data / set the data to sc\n //   const getSignerOrProvider = async (needSigner = false) => {\n //     const provider = await web3ModalRef.current.connect();\n //     const web3Provider = new providers.Web3Provider(provider);\n //     const { chainId } = await web3Provider.getNetwork();\n //     if (chainId !== 4) {\n //       alert(\"USE RINKEEBY NETWORK\");\n //       throw new Error(\"Change network to Rinkeby\");\n //     }\n //     if (needSigner) {\n //       const signer = web3Provider.getSigner();\n //       return signer;\n //     }\n //     return provider;\n //   };\n //   const connectWallet = async () => {\n //     try {\n //       await getSignerOrProvider();\n //       setConnectedWallet(true);\n //     } catch (error) {\n //       console.log(\" error\", error);\n //     }\n //   };\n //   const disconnect = async () => {\n //     await web3Modal.clearCachedProvider();\n //     refreshState();\n //   };\n //   useEffect(() => {\n //     web3ModalRef.current = new Web3Modal({\n //       network: \"rinkeby\",\n //       providerOptions: {\n //         coinbasewallet: {\n //           package: CoinbaseWalletSDK, \n //           options: {\n //             appName: \"Stardust Generation\",\n //             infuraId: process.env.NEXT_PUBLIC_INFURA_KEY \n //           }\n //         },\n //         walletconnect: {\n //           package: WalletConnect, \n //           options: {\n //             infuraId: process.env.NEXT_PUBLIC_INFURA_KEY \n //           } \n //         }\n //       },\n //     });\n //   }, []);\n //   // when we click mint amount\n //   const handleDecrement = () => {\n //     if (mintAmount <= 1) return;\n //     setMintAmount(mintAmount - 1);\n //   };\n //   const handleIncrement = () => {\n //     //for max number of mints this case is 3\n //     if (mintAmount >= 7) return;\n //     setMintAmount(mintAmount + 1);\n //   };\n //   async function handlePublicMint() {\n //     if (connectedWallet) {\n //       //way for ethers to connect to blockchain\n //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n //       //when making transaction signer\n //       const signer = provider.getSigner();\n //       const contract = new ethers.Contract(\n //         //change these\n //         stardustAddress,\n //         StardustGeneration.abi,\n //         signer\n //       );\n //       try {\n //         const response = await contract.PublicMint(BigNumber.from(mintAmount), {\n //           value: ethers.utils.parseEther((0.04 * mintAmount).toString()),\n //         });\n //         console.log(\"response: \", response);\n //       } catch (err) {\n //         console.log(\"error: \", err);\n //       }\n //     }\n //   }\n //   return (\n //     <>\n //       <div className=\"text-center mt-8\">\n //         <div>\n //            {!connectedWallet ? (\n //             <button onClick={connectWallet}>Connect Wallet</button>\n //           ) : (\n //             <button onClick={disconnect}>Disconnect</button>\n //           )}\n //         </div>\n //       </div>\n //       <div className=\"main-mint\">\n //       {/* <h1>Stardust </h1>\n //       <p> mint your stardust</p> */}\n //       {connectedWallet ? (\n //         <div>\n //           <div className=\"counter\">\n //             <button\n //               className=\"decrement-btn\"\n //               onClick={handleDecrement}\n //             ></button>\n //             <input className=\"input\" type=\"number\" value={mintAmount} />\n //             <button\n //               className=\"increment-btn\"\n //               onClick={handleIncrement}\n //             ></button>\n //           </div>\n //           <button className=\"mint-button\" onClick={handlePublicMint}>\n //             {\" \"}\n //             MINT\n //           </button>\n //         </div>\n //       ) : (\n //         <p></p>\n //       )}\n //     </div>\n //     </>\n //   );\n // }\n // // const web3Modal = new Web3Modal({\n // //   //   network: \"mainnet\", // optional\n // //   //   cacheProvider: true, // optional\n // //   //   providerOptions // required\n // //     network: \"rinkeby\", // optional\n // //     cacheProvider: true, // optional\n // //     providerOptions // required\n // //   });\n // //   const instance = await web3Modal.connect();\n // //   const provider = new ethers.providers.Web3Provider(instance);\n // //   const signer = provider.getSigner();\n // // export default function NavBar() {\n // //   const [provider, setProvider] = useState();\n // //   const [library, setLibrary] = useState();\n // //   const [account, setAccount] = useState();\n // //   const [signature, setSignature] = useState(\"\");\n // //   const [error, setError] = useState(\"\");\n // //   const [chainId, setChainId] = useState();\n // //   const [network, setNetwork] = useState();\n // //   const [message, setMessage] = useState(\"\");\n // //   const [signedMessage, setSignedMessage] = useState(\"\");\n // //   const [verified, setVerified] = useState();\n // //   const connectWallet = async () => {\n // //     try {\n // //       const provider = await web3Modal.connect();\n // //       const library = new ethers.providers.Web3Provider(provider);\n // //       const accounts = await library.listAccounts();\n // //       const network = await library.getNetwork();\n // //       setProvider(provider);\n // //       setLibrary(library);\n // //       if (accounts) setAccount(accounts[0]);\n // //       setChainId(network.chainId);\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const handleNetwork = (e) => {\n // //     const id = e.target.value;\n // //     setNetwork(Number(id));\n // //   };\n // //   const handleInput = (e) => {\n // //     const msg = e.target.value;\n // //     setMessage(msg);\n // //   };\n // //   const switchNetwork = async () => {\n // //     try {\n // //       await library.provider.request({\n // //         method: \"wallet_switchEthereumChain\",\n // //         params: [{ chainId: toHex(network) }]\n // //       });\n // //     } catch (switchError) {\n // //       if (switchError.code === 4902) {\n // //         try {\n // //           await library.provider.request({\n // //             method: \"wallet_addEthereumChain\",\n // //             params: [networkParams[toHex(network)]]\n // //           });\n // //         } catch (error) {\n // //           setError(error);\n // //         }\n // //       }\n // //     }\n // //   };\n // //   const signMessage = async () => {\n // //     if (!library) return;\n // //     try {\n // //       const signature = await library.provider.request({\n // //         method: \"personal_sign\",\n // //         params: [message, account]\n // //       });\n // //       setSignedMessage(message);\n // //       setSignature(signature);\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const verifyMessage = async () => {\n // //     if (!library) return;\n // //     try {\n // //       const verify = await library.provider.request({\n // //         method: \"personal_ecRecover\",\n // //         params: [signedMessage, signature]\n // //       });\n // //       setVerified(verify === account.toLowerCase());\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const refreshState = () => {\n // //     setAccount();\n // //     setChainId();\n // //     setNetwork(\"\");\n // //     setMessage(\"\");\n // //     setSignature(\"\");\n // //     setVerified(undefined);\n // //   };\n // //   const disconnect = async () => {\n // //     await web3Modal.clearCachedProvider();\n // //     refreshState();\n // //   };\n // //   useEffect(() => {\n // //     if (web3Modal.cachedProvider) {\n // //       connectWallet();\n // //     }\n // //   }, []);\n // //   useEffect(() => {\n // //     if (provider?.on) {\n // //       const handleAccountsChanged = (accounts) => {\n // //         console.log(\"accountsChanged\", accounts);\n // //         if (accounts) setAccount(accounts[0]);\n // //       };\n // //       const handleChainChanged = (_hexChainId) => {\n // //         setChainId(_hexChainId);\n // //       };\n // //       const handleDisconnect = () => {\n // //         console.log(\"disconnect\", error);\n // //         disconnect();\n // //       };\n // //       provider.on(\"accountsChanged\", handleAccountsChanged);\n // //       provider.on(\"chainChanged\", handleChainChanged);\n // //       provider.on(\"disconnect\", handleDisconnect);\n // //       return () => {\n // //         if (provider.removeListener) {\n // //           provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n // //           provider.removeListener(\"chainChanged\", handleChainChanged);\n // //           provider.removeListener(\"disconnect\", handleDisconnect);\n // //         }\n // //       };\n // //     }\n // //   }, [provider]);\n // //   return (\n // //     <>\n // //         <div>\n // //           {!account ? (\n // //             <Button onClick={connectWallet}>Connect Wallet</Button>\n // //           ) : (\n // //             <Button onClick={disconnect}>Disconnect</Button>\n // //           )}\n // //         </div>\n // //           <div label={account} placement=\"right\">\n // //             <p>{`Account: ${truncateAddress(account)}`}</p>\n // //           </div>\n // //           <p>{`Network ID: ${chainId ? chainId : \"No Network\"}`}</p>\n // //         </div>\n // //     </>\n // //   );\n // // }\n_s(MainMint, \"QUytILGEo1ieGBRv2eWKmha6U54=\");\n_c = MainMint;\nvar _c;\n$RefreshReg$(_c, \"MainMint\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDZixDQUEyRDtBQUMzRCxDQUEyQztBQUMzQyxDQUFnRDtBQUNoRCxDQUFlO0FBQ2YsQ0FBMEQ7QUFDMUQsQ0FBMkI7QUFDM0IsQ0FBNEI7QUFDNUIsQ0FBVztBQUNYLENBQVU7QUFFVixDQUFvQztBQUNwQyxDQUF1QjtBQUN2QixDQUF1QjtBQUN2QixDQUF5QjtBQUN6QixDQUF5QjtBQUN6QixDQUEyQjtBQUMzQixDQUFpQztBQUNqQyxDQUFVO0FBRVYsQ0FBd0M7QUFDeEMsQ0FBZ0Q7QUFDaEQsQ0FBeUI7QUFDekIsQ0FBVTtBQUVWLENBQXlCO0FBQ3pCLENBQXlDO0FBQ3pDLENBQTRCO0FBQzVCLENBQVc7QUFDWCxDQUFlO0FBRWYsQ0FBeUI7QUFFekIsQ0FBNkI7QUFDN0IsQ0FBeUQ7QUFDekQsQ0FBdUQ7QUFDdkQsQ0FBb0Q7QUFDcEQsQ0FBYztBQUVkLENBQXlEO0FBQ3pELENBQXNDO0FBQ3RDLENBQWM7QUFFZCxDQUE0QztBQUM1QyxDQUErQztBQUMvQyxDQUEyQjtBQUMzQixDQUFjO0FBRWQsQ0FBa0U7QUFDbEUsQ0FBNEQ7QUFDNUQsQ0FBd0Q7QUFFeEQsQ0FBMEI7QUFDMUIsQ0FBNEM7QUFDNUMsQ0FBa0Y7QUFDbEYsQ0FBNEU7QUFDNUUsQ0FBd0U7QUFDeEUsQ0FBZTtBQUNmLENBQWM7QUFDZCxDQUFXO0FBQ1gsQ0FBdUI7QUFFdkIsQ0FBZ0I7QUFDaEIsQ0FBWTtBQUNaLENBQW1CO0FBQ25CLENBQTZCO0FBQzdCLENBQXlFO0FBQ3pFLENBQXFCO0FBQ3JCLENBQWtFO0FBQ2xFLENBQWtCO0FBQ2xCLENBQW9CO0FBRXBCLENBQXVEO0FBQ3ZELENBQWlFO0FBQ2pFLENBQXNCO0FBQ3RCLENBQTBFO0FBQzFFLENBQW9CO0FBRXBCLENBQWE7QUFDYixDQUFVO0FBQ1YsQ0FBTztHQWhtQmlCOUUsUUFBUTtLQUFSQSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL01haW5NaW50LmpzP2U1NjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuLy8gaW1wb3J0IEltYWdlIGZyb20gXCJuZXh0L2ltYWdlXCI7XG4vLyBpbXBvcnQgc3R5bGVzIGZyb20gXCIuLi9zdHlsZXMvTWFpbk1pbnQubW9kdWxlLmNzc1wiO1xuXG4vLyBpbXBvcnQgV2FsbGV0Q29ubmVjdFByb3ZpZGVyIGZyb20gJ0B3YWxsZXRjb25uZWN0L3dlYjMtcHJvdmlkZXInXG5pbXBvcnQgeyBwcm92aWRlcnMgfSBmcm9tICdldGhlcnMnXG4vLyBpbXBvcnQgV2FsbGV0TGluayBmcm9tICd3YWxsZXRsaW5rJ1xuLy8gaW1wb3J0IFdlYjNNb2RhbCBmcm9tICd3ZWIzbW9kYWwnXG4vLyBpbXBvcnQgeyBlbGxpcHNlQWRkcmVzcywgZ2V0Q2hhaW5EYXRhIH0gZnJvbSAnLi4vbGliL3V0aWxpdGllcydcblxuaW1wb3J0IHsgdG9IZXgsIHRydW5jYXRlQWRkcmVzcyB9IGZyb20gXCIuLi91dGlscy9mb3JtYXQuanNcIjtcbmltcG9ydCBXZWIzTW9kYWwgZnJvbSBcIndlYjNtb2RhbFwiO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgZXRoZXJzLCBCaWdOdW1iZXIgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgV2FsbGV0Q29ubmVjdFByb3ZpZGVyIGZyb20gXCJAd2FsbGV0Y29ubmVjdC93ZWIzLXByb3ZpZGVyXCI7XG5pbXBvcnQgQ29pbmJhc2VXYWxsZXRTREsgZnJvbSBcIkBjb2luYmFzZS93YWxsZXQtc2RrXCI7XG5cbmltcG9ydCBzdGFyZHVzdEdlbmVyYXRpb24gZnJvbSBcIi4uL2FydGlmYWN0cy9jb250cmFjdHMvU3RhcmR1c3RHZW5lcmF0aW9uLnNvbC9TdGFyZHVzdEdlbmVyYXRpb25cIjtcbmNvbnN0IGNvbnRyYWN0QWRkcmVzcyA9IFwiMHgzQTZFNjI4ZjhiNmM4M2NCNDA5YzJjNjdjQzQyY2VlQ0JBMjE5MDQ2XCI7XG5cblxuY29uc3QgeyBNZXJrbGVUcmVlIH0gPSByZXF1aXJlKCdtZXJrbGV0cmVlanMnKVxuY29uc3Qga2VjY2FrMjU2ID0gcmVxdWlyZSgna2VjY2FrMjU2JylcbmNvbnN0IHN0YXJsaXN0ID0gcmVxdWlyZSgnLi4vc2NyaXB0cy9zdGFybGlzdC5qcycpXG5jb25zdCB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTkZVUkFfS0VZO1xuXG5jb25zdCBwcm92aWRlck9wdGlvbnMgPSB7XG4gIGNvaW5iYXNld2FsbGV0OiB7XG4gICAgcGFja2FnZTogQ29pbmJhc2VXYWxsZXRTREssIFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIGFwcE5hbWU6IFwiU3RhcmR1c3QgR2VuZXJhdGlvblwiLFxuICAgICAgaW5mdXJhSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0lORlVSQV9LRVkgXG4gICAgfVxuICB9LFxuICB3YWxsZXRjb25uZWN0OiB7XG4gICAgcGFja2FnZTogV2FsbGV0Q29ubmVjdFByb3ZpZGVyLCAvLyByZXF1aXJlZFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHJwYzogeyA0MjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUlBDX1VSTCB9LCAvLyByZXF1aXJlZFxuICAgIH0sXG4gIH0sXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1haW5NaW50KCkge1xuICBjb25zdCBbbWludEFtb3VudCwgc2V0TWludEFtb3VudF0gPSB1c2VTdGF0ZSgxKTtcbiAgY29uc3QgW2lzQ29ubmVjdGVkLCBzZXRJc0Nvbm5lY3RlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtoYXNNZXRhbWFzaywgc2V0SGFzTWV0YW1hc2tdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2lnbmVyLCBzZXRTaWduZXJdID0gdXNlU3RhdGUodW5kZWZpbmVkKTtcblxuICBjb25zdCBbcHJvdmlkZXIsIHNldFByb3ZpZGVyXSA9IHVzZVN0YXRlKCk7XG5cbiAgLy8gY29uc3QgW2xpYnJhcnksIHNldExpYnJhcnldID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW2FjY291bnQsIHNldEFjY291bnRdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW2NoYWluSWQsIHNldENoYWluSWRdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW25ldHdvcmssIHNldE5ldHdvcmtdID0gdXNlU3RhdGUoKTtcblxuICBsZXQgd2ViM01vZGFsXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdlYjNNb2RhbCA9IG5ldyBXZWIzTW9kYWwoe1xuICAgICAgbmV0d29yazogJ3JpbmtlYnknLCAvLyBvcHRpb25hbFxuICAgICAgY2FjaGVQcm92aWRlcjogdHJ1ZSxcbiAgICAgIHByb3ZpZGVyT3B0aW9ucywgLy8gcmVxdWlyZWRcbiAgICB9KVxuICB9XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJvdmlkZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHNldEhhc01ldGFtYXNrKHRydWUpO1xuICAgIH1cbiAgfSk7XG5cblx0Y29uc3QgY29ubmVjdFdhbGxldCA9IGFzeW5jICgpID0+IHtcblx0XHR0cnkge1xuXHRcdFx0Y29uc3QgeyBldGhlcmV1bSB9ID0gd2luZG93XG5cblx0XHRcdGlmICghZXRoZXJldW0pIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ01ldGFtYXNrIG5vdCBkZXRlY3RlZCcpXG5cdFx0XHRcdHJldHVyblxuXHRcdFx0fVxuXHRcdFx0bGV0IGNoYWluSWQgPSBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX2NoYWluSWQnfSlcblx0XHRcdGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gY2hhaW46JyArIGNoYWluSWQpXG5cblx0XHRcdGNvbnN0IHJpbmtlYnlDaGFpbklkID0gJzB4NCdcbiAgICAgIGNvbnN0IHdlYjNNb2RhbFByb3ZpZGVyID0gYXdhaXQgd2ViM01vZGFsLmNvbm5lY3QoKTtcblx0XHRcdGlmIChjaGFpbklkICE9PSByaW5rZWJ5Q2hhaW5JZCkge1xuXHRcdFx0XHRhbGVydCgnWW91IGFyZSBub3QgY29ubmVjdGVkIHRvIHRoZSBSaW5rZWJ5IFRlc3RuZXQhJylcblx0XHRcdFx0cmV0dXJuXG5cdFx0XHR9XG5cdFx0XHRjb25zdCBhY2NvdW50cyA9IGF3YWl0IGV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6ICdldGhfcmVxdWVzdEFjY291bnRzJyB9KVxuICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5XZWIzUHJvdmlkZXIod2ViM01vZGFsUHJvdmlkZXIpO1xuICAgICAgc2V0U2lnbmVyKHByb3ZpZGVyLmdldFNpZ25lcigpKTtcblx0XHRcdGNvbnNvbGUubG9nKCdGb3VuZCBhY2NvdW50JywgYWNjb3VudHNbMF0pXG5cdFx0XHRzZXRBY2NvdW50KGFjY291bnRzWzBdKVxuICAgICAgc2V0SXNDb25uZWN0ZWQodHJ1ZSlcblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0Y29uc29sZS5sb2coJ0Vycm9yIGNvbm5lY3RpbmcgdG8gbWV0YW1hc2snLCBlcnJvcilcblx0XHR9XG5cdH1cblxuXHQvLyBDaGVja3MgaWYgd2FsbGV0IGlzIGNvbm5lY3RlZCB0byB0aGUgY29ycmVjdCBuZXR3b3JrXG5cdGNvbnN0IGNoZWNrQ29ycmVjdE5ldHdvcmsgPSBhc3luYyAoKSA9PiB7XG5cdFx0Y29uc3QgeyBldGhlcmV1bSB9ID0gd2luZG93XG5cdFx0bGV0IGNoYWluSWQgPSBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX2NoYWluSWQnIH0pXG5cdFx0Y29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBjaGFpbjonICsgY2hhaW5JZClcblxuXHRcdGNvbnN0IHJpbmtlYnlDaGFpbklkID0gJzB4NCdcblxuXHRcdGlmIChjaGFpbklkICE9PSByaW5rZWJ5Q2hhaW5JZCkge1xuXHRcdFx0c2V0Q29ycmVjdE5ldHdvcmsoZmFsc2UpXG5cdFx0fSBlbHNlIHtcblx0XHRcdHNldENvcnJlY3ROZXR3b3JrKHRydWUpXG5cdFx0fVxuXHR9XG4gIGNvbnN0IGhhbmRsZURpc2Nvbm5lY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgd2ViM01vZGFsLmNsZWFyQ2FjaGVkUHJvdmlkZXIoKTtcbiAgICByZWZyZXNoU3RhdGUoKTtcbiAgfTtcbiAgICAvLyB3aGVuIHdlIGNsaWNrIG1pbnQgYW1vdW50XG4gIGNvbnN0IGhhbmRsZURlY3JlbWVudCA9ICgpID0+IHtcbiAgICBpZiAobWludEFtb3VudCA8PSAxKSByZXR1cm47XG4gICAgc2V0TWludEFtb3VudChtaW50QW1vdW50IC0gMSk7XG4gIH07XG4gIGNvbnN0IGhhbmRsZUluY3JlbWVudCA9ICgpID0+IHtcbiAgICAvL2ZvciBtYXggbnVtYmVyIG9mIG1pbnRzIHRoaXMgY2FzZSBpcyAzXG4gICAgaWYgKG1pbnRBbW91bnQgPj0gNykgcmV0dXJuO1xuICAgIHNldE1pbnRBbW91bnQobWludEFtb3VudCArIDEpO1xuICB9O1xuXG4gIGNvbnN0IHJlZnJlc2hTdGF0ZSA9ICgpID0+IHtcbiAgICBzZXRBY2NvdW50KCk7XG4gICAgc2V0Q2hhaW5JZCgpO1xuICAgIHNldFNpZ25lcigpO1xuICAgIHNldE5ldHdvcmsoXCJcIik7XG4gIH07XG5cbiAgLy8gcGFzcyBpbiBwcm9vZj8gXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVN0YXJsaXN0TWludChwcm92aWRlciwgbWludEFtb3VudCkge1xuICAgIGlmICghd2luZG93LmV0aGVyZXVtLnNlbGVjdGVkQWRkcmVzcykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHN0YXR1czogJ1RvIGJlIGFibGUgdG8gbWludCwgeW91IG5lZWQgdG8gY29ubmVjdCB5b3VyIHdhbGxldCdcbiAgICAgIH1cbiAgICB9XG4gIFxuICAgIGNvbnN0IGxlYWYgPSBrZWNjYWsyNTYod2luZG93LmV0aGVyZXVtLnNlbGVjdGVkQWRkcmVzcylcbiAgICBjb25zdCBwcm9vZiA9IG1lcmtsZVRyZWUuZ2V0SGV4UHJvb2YobGVhZilcbiAgXG4gICAgLy8gVmVyaWZ5IE1lcmtsZSBQcm9vZlxuICAgIGNvbnN0IGlzVmFsaWQgPSBtZXJrbGVUcmVlLnZlcmlmeShwcm9vZiwgbGVhZiwgcm9vdClcbiAgXG4gICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgc3RhdHVzOiAnSW52YWxpZCBNZXJrbGUgUHJvb2YgLSBZb3UgYXJlIG5vdCBvbiB0aGUgc3Rhcmxpc3QnXG4gICAgICB9XG4gICAgfVxuICBcbiAgICAvLyBhdm9pZCByZXBsYXkgYXR0YWNrc1xuICAgIGNvbnN0IG5vbmNlID0gYXdhaXQgcHJvdmlkZXIuZ2V0VHJhbnNhY3Rpb25Db3VudChcbiAgICAgIHdpbmRvdy5ldGhlcmV1bS5zZWxlY3RlZEFkZHJlc3MsXG4gICAgICAnbGF0ZXN0J1xuICAgIClcbiAgXG4gICAgLy8gU2V0IHVwIG91ciBFdGhlcmV1bSB0cmFuc2FjdGlvblxuICAgIGNvbnN0IHR4ID0ge1xuICAgICAgdG86IGNvbmZpZy5jb250cmFjdEFkZHJlc3MsXG4gICAgICBmcm9tOiB3aW5kb3cuZXRoZXJldW0uc2VsZWN0ZWRBZGRyZXNzLFxuICAgICAgdmFsdWU6IHBhcnNlSW50KFxuICAgICAgICB3ZWIzLnV0aWxzLnRvV2VpKFN0cmluZyhjb25maWcuY29zdCAqIG1pbnRBbW91bnQpLCAnZXRoZXInKVxuICAgICAgKS50b1N0cmluZygxNiksIC8vIGhleFxuICAgICAgZGF0YTogbmZ0Q29udHJhY3QubWV0aG9kc1xuICAgICAgICAubWludFN0YXJsaXN0KHdpbmRvdy5ldGhlcmV1bS5zZWxlY3RlZEFkZHJlc3MsIHByb29mLCBtaW50QW1vdW50KSAvLyB3aW5kb3cuZXRoZXJldW0uc2VsZWN0ZWRBZGRyZXNzIGFzIHRoaXJkIHBhcmFtP1xuICAgICAgICAuZW5jb2RlQUJJKCksXG4gICAgICBub25jZTogbm9uY2UudG9TdHJpbmcoMTYpXG4gICAgfVxuICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgdHhIYXNoID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3Qoe1xuICAgICAgICBtZXRob2Q6ICdldGhfc2VuZFRyYW5zYWN0aW9uJyxcbiAgICAgICAgcGFyYW1zOiBbdHhdXG4gICAgICB9KVxuICBcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIHN0YXR1czogKFxuICAgICAgICAgIDxhIGhyZWY9e2BodHRwczovL2V0aGVyc2Nhbi5pby90eC8ke3R4SGFzaH1gfSB0YXJnZXQ9XCJfYmxhbmtcIj5cbiAgICAgICAgICAgIDxwPuKchSBDaGVjayBvdXQgeW91ciB0cmFuc2FjdGlvbiBvbiBFdGhlcnNjYW46PC9wPlxuICAgICAgICAgICAgPHA+e2BodHRwczovL2V0aGVyc2Nhbi5pby90eC8ke3R4SGFzaH1gfTwvcD5cbiAgICAgICAgICA8L2E+XG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHN0YXR1czogYPCfmJ4gT2ggbXksIHNvbWV0aGluZyB3ZW50IHdyb25nOiBgICsgZXJyb3IubWVzc2FnZVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVJlc2VydmVsaXN0TWludChwcm92aWRlciwgbWludEFtb3VudCkge1xuICAvLyAgIGlmICh0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIC8vICAgICBjb25zdCBjb250cmFjdCA9IG5ldyBldGhlcnMuQ29udHJhY3QoY29udHJhY3RBZGRyZXNzLCBzdGFyZHVzdEdlbmVyYXRpb24uYWJpLCBzaWduZXIpO1xuICAvLyAgICAgdHJ5IHtcbiAgLy8gICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjb250cmFjdC5taW50UmVzZXJ2ZWxpc3QoQmlnTnVtYmVyLmZyb20obWludEFtb3VudCksIHtcbiAgLy8gICAgICAgICB2YWx1ZTogZXRoZXJzLnV0aWxzLnBhcnNlRXRoZXIoKDAuMDQgKiBtaW50QW1vdW50KS50b1N0cmluZygpKSxcbiAgLy8gICAgICAgfSk7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2U6IFwiLCByZXNwb25zZSk7XG4gIC8vICAgICB9IGNhdGNoIChlcnIpIHtcbiAgLy8gICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsIGVycik7XG4gIC8vICAgICB9XG4gIC8vICAgfSBlbHNlIHtcbiAgLy8gICAgIGNvbnNvbGUubG9nKFwiUGxlYXNlIGluc3RhbGwgTWV0YU1hc2tcIik7XG4gIC8vICAgfVxuICAvLyB9XG5cbiAgY29uc3QgaGFuZGxlUHVibGljTWludCA9IGFzeW5jIChwcm92aWRlciwgbWludEFtb3VudCkgPT4ge1xuICAgIGNvbnN0IHdlYjMgPSBuZXcgV2ViMyggcHJvdmlkZXIgKTtcbiAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdlYjMuZXRoLmdldEFjY291bnRzKCk7XG5cbiAgICBpZiAoIWFjY291bnRzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHN0YXR1czogJ1RvIGJlIGFibGUgdG8gbWludCwgeW91IG5lZWQgdG8gY29ubmVjdCB5b3VyIHdhbGxldCdcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbmZ0Q29udHJhY3QgPSBuZXcgd2ViMy5ldGguQ29udHJhY3QoY29udHJhY3QuYWJpLCBjb25maWcuY29udHJhY3RBZGRyZXNzKTtcblxuICAgIC8vIGNvbnN0IHZhbHVlQk4gPSBXZWIzLnV0aWxzLnRvQk4oIFdlYjMudXRpbHMudG9XZWkoYCR7Y29uZmlnLmNvc3R9YCkgKVxuICAgIC8vICAgLm11bCggV2ViMy51dGlscy50b0JOKCBgJHttaW50QW1vdW50fWAgKSApO1xuICAgIC8vICAgY29uc29sZS5sb2codmFsdWVCTi50b1N0cmluZygpKTtcbiAgICAgIFxuICAgIGlmICh0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBjb25zdCBjb250cmFjdCA9IG5ldyBldGhlcnMuQ29udHJhY3QoY29udHJhY3RBZGRyZXNzLCBzdGFyZHVzdEdlbmVyYXRpb24uYWJpLCBzaWduZXIpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjb250cmFjdC5taW50UHVibGljKEJpZ051bWJlci5mcm9tKG1pbnRBbW91bnQpLCB7XG4gICAgICAgICAgdmFsdWU6IGV0aGVycy51dGlscy5wYXJzZUV0aGVyKCgwLjA0ICogbWludEFtb3VudCkudG9TdHJpbmcoKSksXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zb2xlLmxvZyhcInJlc3BvbnNlOiBcIiwgcmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlBsZWFzZSBpbnN0YWxsIE1ldGFNYXNrXCIpO1xuICAgIH1cblxuICAgIC8vIHRyeSB7XG4gICAgLy8gICBhd2FpdCBuZnRDb250cmFjdC5tZXRob2RzLm1pbnRQdWJsaWMoIG1pbnRBbW91bnQgKS5lc3RpbWF0ZUdhcyh7XG4gICAgLy8gICAgIGZyb206IGFjY291bnRzWzBdLFxuICAgIC8vICAgICB2YWx1ZTogdmFsdWVCTi50b1N0cmluZygpXG4gICAgLy8gICB9KTtcblxuICAgIC8vICAgcmV0dXJuIHtcbiAgICAvLyAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAvLyAgICAgc3RhdHVzOiBgVHggd2VudCB0aHJvdWdoYFxuICAgIC8vICAgICAvLyBzdGF0dXM6IChcbiAgICAvLyAgICAgLy8gICA8YSBocmVmPXtgaHR0cHM6Ly9ldGhlcnNjYW4uaW8vdHgvJHt0eEhhc2h9YH0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgLy8gICAgIC8vICAgICA8cD7inIUgIENoZWNrIG91dCB5b3VyIHRyYW5zYWN0aW9uIG9uIEV0aGVyc2Nhbjo8L3A+XG4gICAgLy8gICAgIC8vICAgICA8cD57YGh0dHBzOi8vZXRoZXJzY2FuLmlvL3R4LyR7dHhIYXNofWB9PC9wPlxuICAgIC8vICAgICAvLyAgIDwvYT5cbiAgICAvLyAgICAgLy8gKVxuICAgIC8vICAgfVxuICAgIC8vIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gICByZXR1cm4ge1xuICAgIC8vICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAvLyAgICAgc3RhdHVzOiBg8J+YniAgT2ggbXksIHNvbWV0aGluZyB3ZW50IHdyb25nYCArIGVycm9yLm1lc3NhZ2VcbiAgICAvLyAgIH1cbiAgICAvLyB9XG59XG4gICAgXG5cbiAgcmV0dXJuIChcbiAgICAvLyA8ZGl2IGNsYXNzTmFtZT1cIm1haW4tbWludFwiPlxuICAgIC8vICAge2hhc01ldGFtYXNrID8gKFxuICAgIC8vICAgICBpc0Nvbm5lY3RlZCA/IChcbiAgICAvLyAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2Rpc2Nvbm5lY3RXYWxsZXR9PkRpc2Nvbm5lY3Q8L2J1dHRvbj5cbiAgICAvLyAgICAgKSA6IChcbiAgICAvLyAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2Nvbm5lY3RXYWxsZXR9PkNvbm5lY3QgV2FsbGV0PC9idXR0b24+XG4gICAgLy8gICAgIClcbiAgICAvLyAgICkgOiAoXG4gICAgLy8gICAgIFwiUGxlYXNlIGluc3RhbGwgbWV0YW1hc2tcIlxuICAgIC8vICAgKX1cblxuICBcbiAgICAvLyA8L2Rpdj5cbiAgICA8PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyIG10LThcIj5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgIHtoYXNNZXRhbWFzayA/IChcbiAgICAgICAgICAgIGlzQ29ubmVjdGVkID8gKFxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZURpc2Nvbm5lY3R9PkRpc2Nvbm5lY3QgV2FsbGV0PC9idXR0b24+XG5cbiAgICAgICAgICAgICAgLy8gPGJ1dHRvbj5Db25uZWN0ZWQ8L2J1dHRvbj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17Y29ubmVjdFdhbGxldH0+Q29ubmVjdCBXYWxsZXQ8L2J1dHRvbj5cbiAgICAgICAgICAgIClcbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgXCJQbGVhc2UgaW5zdGFsbCBtZXRhbWFza1wiXG4gICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1taW50XCI+XG4gICAgICAgIHsvKiA8aDE+U3RhcmR1c3QgPC9oMT5cbiAgICAgICAgPHA+IG1pbnQgeW91ciBzdGFyZHVzdDwvcD4gKi99XG4gICAgICAgIHtpc0Nvbm5lY3RlZCA/IChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb3VudGVyXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkZWNyZW1lbnQtYnRuXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVEZWNyZW1lbnR9XG4gICAgICAgICAgICAgID48L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT1cImlucHV0XCIgdHlwZT1cIm51bWJlclwiIHZhbHVlPXttaW50QW1vdW50fSAvPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW5jcmVtZW50LWJ0blwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlSW5jcmVtZW50fVxuICAgICAgICAgICAgICA+PC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibWludC1idXR0b25cIiBvbkNsaWNrPXtoYW5kbGVQdWJsaWNNaW50fT5cbiAgICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgICAgICBNSU5UXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8cD48L3A+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cblxuLy8gLy8gaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuLy8gLy8gLy8gaW1wb3J0IHsgbmV0d29ya1BhcmFtcyB9IGZyb20gXCIuL25ldHdvcmtzXCI7XG4vLyAvLyBpbXBvcnQgeyB0b0hleCwgdHJ1bmNhdGVBZGRyZXNzIH0gZnJvbSBcIi4uL3V0aWxzL2Zvcm1hdC5qc1wiO1xuLy8gLy8gaW1wb3J0IHsgcHJvdmlkZXJPcHRpb25zLCBuZXR3b3JrUGFyYW1zIH0gZnJvbSBcIi4uL3V0aWxzL3dlYjNXYWxsZXQuanNcIjtcblxuLy8gaW1wb3J0IHsgZXRoZXJzLCBCaWdOdW1iZXIsIHByb3ZpZGVycyB9IGZyb20gXCJldGhlcnNcIjtcbi8vIGltcG9ydCBXZWIzTW9kYWwgZnJvbSBcIndlYjNtb2RhbFwiO1xuLy8gaW1wb3J0IENvaW5iYXNlV2FsbGV0U0RLIGZyb20gXCJAY29pbmJhc2Uvd2FsbGV0LXNka1wiO1xuLy8gaW1wb3J0IFdhbGxldENvbm5lY3QgZnJvbSBcIkB3YWxsZXRjb25uZWN0L3dlYjMtcHJvdmlkZXJcIjtcbi8vIGltcG9ydCB7IHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuLy8gLy8gaW1wb3J0IHsgcHJvdmlkZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuLy8gLy8gaW1wb3J0IGNvbmZpZyBmcm9tIFwiLi4vZGFwcC5jb25maWcuanNcIjtcbi8vIGltcG9ydCBTdGFyZHVzdEdlbmVyYXRpb24gZnJvbSBcIi4uL2FydGlmYWN0cy9jb250cmFjdHMvU3RhcmR1c3RHZW5lcmF0aW9uLnNvbC9TdGFyZHVzdEdlbmVyYXRpb24uanNvblwiO1xuXG4vLyBjb25zdCBzdGFyZHVzdEFkZHJlc3MgPSBcIjB4M0E2RTYyOGY4YjZjODNjQjQwOWMyYzY3Y0M0MmNlZUNCQTIxOTA0NlwiO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNYWluTWludCgpIHtcbi8vICAgY29uc3QgW2Nvbm5lY3RlZFdhbGxldCwgc2V0Q29ubmVjdGVkV2FsbGV0XSA9IHVzZVN0YXRlKGZhbHNlKTtcbi8vICAgY29uc3QgW21pbnRBbW91bnQsIHNldE1pbnRBbW91bnRdID0gdXNlU3RhdGUoMSk7XG4vLyAgIGNvbnN0IHdlYjNNb2RhbFJlZiA9IHVzZVJlZigpOyAvLyByZXR1cm4gdGhlIG9iamVjdCB3aXRoIGtleSBuYW1lZCBjdXJyZW50XG5cbi8vICAgLy8gcHJvdmlkZXJzIGFuZCBzaWduZXIgID0+XG4vLyAgIC8vIHByb3ZpZGVycyBpcyB1c2VkIGZvciB0byBnZXQgZGF0YSBmcm9tIHNjXG4vLyAgIC8vIHNpZ25lciBpcyB1c2VkIGZvciB0byBzaWduIGRhdGEgLyBzZXQgdGhlIGRhdGEgdG8gc2NcblxuLy8gICBjb25zdCBnZXRTaWduZXJPclByb3ZpZGVyID0gYXN5bmMgKG5lZWRTaWduZXIgPSBmYWxzZSkgPT4ge1xuLy8gICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgd2ViM01vZGFsUmVmLmN1cnJlbnQuY29ubmVjdCgpO1xuLy8gICAgIGNvbnN0IHdlYjNQcm92aWRlciA9IG5ldyBwcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHByb3ZpZGVyKTtcbi8vICAgICBjb25zdCB7IGNoYWluSWQgfSA9IGF3YWl0IHdlYjNQcm92aWRlci5nZXROZXR3b3JrKCk7XG4vLyAgICAgaWYgKGNoYWluSWQgIT09IDQpIHtcbi8vICAgICAgIGFsZXJ0KFwiVVNFIFJJTktFRUJZIE5FVFdPUktcIik7XG4vLyAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDaGFuZ2UgbmV0d29yayB0byBSaW5rZWJ5XCIpO1xuLy8gICAgIH1cbi8vICAgICBpZiAobmVlZFNpZ25lcikge1xuLy8gICAgICAgY29uc3Qgc2lnbmVyID0gd2ViM1Byb3ZpZGVyLmdldFNpZ25lcigpO1xuLy8gICAgICAgcmV0dXJuIHNpZ25lcjtcbi8vICAgICB9XG4vLyAgICAgcmV0dXJuIHByb3ZpZGVyO1xuLy8gICB9O1xuXG4vLyAgIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG4vLyAgICAgdHJ5IHtcbi8vICAgICAgIGF3YWl0IGdldFNpZ25lck9yUHJvdmlkZXIoKTtcbi8vICAgICAgIHNldENvbm5lY3RlZFdhbGxldCh0cnVlKTtcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgY29uc29sZS5sb2coXCIgZXJyb3JcIiwgZXJyb3IpO1xuLy8gICAgIH1cbi8vICAgfTtcbiAgXG4vLyAgIGNvbnN0IGRpc2Nvbm5lY3QgPSBhc3luYyAoKSA9PiB7XG4vLyAgICAgYXdhaXQgd2ViM01vZGFsLmNsZWFyQ2FjaGVkUHJvdmlkZXIoKTtcbi8vICAgICByZWZyZXNoU3RhdGUoKTtcbi8vICAgfTtcblxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gICAgIHdlYjNNb2RhbFJlZi5jdXJyZW50ID0gbmV3IFdlYjNNb2RhbCh7XG4vLyAgICAgICBuZXR3b3JrOiBcInJpbmtlYnlcIixcbi8vICAgICAgIHByb3ZpZGVyT3B0aW9uczoge1xuLy8gICAgICAgICBjb2luYmFzZXdhbGxldDoge1xuLy8gICAgICAgICAgIHBhY2thZ2U6IENvaW5iYXNlV2FsbGV0U0RLLCBcbi8vICAgICAgICAgICBvcHRpb25zOiB7XG4vLyAgICAgICAgICAgICBhcHBOYW1lOiBcIlN0YXJkdXN0IEdlbmVyYXRpb25cIixcbi8vICAgICAgICAgICAgIGluZnVyYUlkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTkZVUkFfS0VZIFxuLy8gICAgICAgICAgIH1cbi8vICAgICAgICAgfSxcbi8vICAgICAgICAgd2FsbGV0Y29ubmVjdDoge1xuLy8gICAgICAgICAgIHBhY2thZ2U6IFdhbGxldENvbm5lY3QsIFxuLy8gICAgICAgICAgIG9wdGlvbnM6IHtcbi8vICAgICAgICAgICAgIGluZnVyYUlkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTkZVUkFfS0VZIFxuLy8gICAgICAgICAgIH0gXG4vLyAgICAgICAgIH1cbi8vICAgICAgIH0sXG4vLyAgICAgfSk7XG4vLyAgIH0sIFtdKTtcblxuLy8gICAvLyB3aGVuIHdlIGNsaWNrIG1pbnQgYW1vdW50XG4vLyAgIGNvbnN0IGhhbmRsZURlY3JlbWVudCA9ICgpID0+IHtcbi8vICAgICBpZiAobWludEFtb3VudCA8PSAxKSByZXR1cm47XG4vLyAgICAgc2V0TWludEFtb3VudChtaW50QW1vdW50IC0gMSk7XG4vLyAgIH07XG4vLyAgIGNvbnN0IGhhbmRsZUluY3JlbWVudCA9ICgpID0+IHtcbi8vICAgICAvL2ZvciBtYXggbnVtYmVyIG9mIG1pbnRzIHRoaXMgY2FzZSBpcyAzXG4vLyAgICAgaWYgKG1pbnRBbW91bnQgPj0gNykgcmV0dXJuO1xuLy8gICAgIHNldE1pbnRBbW91bnQobWludEFtb3VudCArIDEpO1xuLy8gICB9O1xuXG4vLyAgIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVB1YmxpY01pbnQoKSB7XG4vLyAgICAgaWYgKGNvbm5lY3RlZFdhbGxldCkge1xuLy8gICAgICAgLy93YXkgZm9yIGV0aGVycyB0byBjb25uZWN0IHRvIGJsb2NrY2hhaW5cbi8vICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XG4vLyAgICAgICAvL3doZW4gbWFraW5nIHRyYW5zYWN0aW9uIHNpZ25lclxuLy8gICAgICAgY29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XG4vLyAgICAgICBjb25zdCBjb250cmFjdCA9IG5ldyBldGhlcnMuQ29udHJhY3QoXG4vLyAgICAgICAgIC8vY2hhbmdlIHRoZXNlXG4vLyAgICAgICAgIHN0YXJkdXN0QWRkcmVzcyxcbi8vICAgICAgICAgU3RhcmR1c3RHZW5lcmF0aW9uLmFiaSxcbi8vICAgICAgICAgc2lnbmVyXG4vLyAgICAgICApO1xuXG4vLyAgICAgICB0cnkge1xuLy8gICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNvbnRyYWN0LlB1YmxpY01pbnQoQmlnTnVtYmVyLmZyb20obWludEFtb3VudCksIHtcbi8vICAgICAgICAgICB2YWx1ZTogZXRoZXJzLnV0aWxzLnBhcnNlRXRoZXIoKDAuMDQgKiBtaW50QW1vdW50KS50b1N0cmluZygpKSxcbi8vICAgICAgICAgfSk7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2U6IFwiLCByZXNwb25zZSk7XG4vLyAgICAgICB9IGNhdGNoIChlcnIpIHtcbi8vICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsIGVycik7XG4vLyAgICAgICB9XG4vLyAgICAgfVxuLy8gICB9XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8PlxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBtdC04XCI+XG4vLyAgICAgICAgIDxkaXY+XG4vLyAgICAgICAgICAgIHshY29ubmVjdGVkV2FsbGV0ID8gKFxuLy8gICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtjb25uZWN0V2FsbGV0fT5Db25uZWN0IFdhbGxldDwvYnV0dG9uPlxuLy8gICAgICAgICAgICkgOiAoXG4vLyAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2Rpc2Nvbm5lY3R9PkRpc2Nvbm5lY3Q8L2J1dHRvbj5cbi8vICAgICAgICAgICApfVxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICAgIDwvZGl2PlxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluLW1pbnRcIj5cbi8vICAgICAgIHsvKiA8aDE+U3RhcmR1c3QgPC9oMT5cbi8vICAgICAgIDxwPiBtaW50IHlvdXIgc3RhcmR1c3Q8L3A+ICovfVxuLy8gICAgICAge2Nvbm5lY3RlZFdhbGxldCA/IChcbi8vICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvdW50ZXJcIj5cbi8vICAgICAgICAgICAgIDxidXR0b25cbi8vICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVjcmVtZW50LWJ0blwiXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZURlY3JlbWVudH1cbi8vICAgICAgICAgICAgID48L2J1dHRvbj5cbi8vICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9XCJpbnB1dFwiIHR5cGU9XCJudW1iZXJcIiB2YWx1ZT17bWludEFtb3VudH0gLz5cbi8vICAgICAgICAgICAgIDxidXR0b25cbi8vICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW5jcmVtZW50LWJ0blwiXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUluY3JlbWVudH1cbi8vICAgICAgICAgICAgID48L2J1dHRvbj5cbi8vICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cIm1pbnQtYnV0dG9uXCIgb25DbGljaz17aGFuZGxlUHVibGljTWludH0+XG4vLyAgICAgICAgICAgICB7XCIgXCJ9XG4vLyAgICAgICAgICAgICBNSU5UXG4vLyAgICAgICAgICAgPC9idXR0b24+XG4vLyAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgKSA6IChcbi8vICAgICAgICAgPHA+PC9wPlxuLy8gICAgICAgKX1cbi8vICAgICA8L2Rpdj5cbi8vICAgICA8Lz5cbi8vICAgKTtcbi8vIH1cblxuXG5cbi8vIC8vIGNvbnN0IHdlYjNNb2RhbCA9IG5ldyBXZWIzTW9kYWwoe1xuLy8gLy8gICAvLyAgIG5ldHdvcms6IFwibWFpbm5ldFwiLCAvLyBvcHRpb25hbFxuLy8gLy8gICAvLyAgIGNhY2hlUHJvdmlkZXI6IHRydWUsIC8vIG9wdGlvbmFsXG4vLyAvLyAgIC8vICAgcHJvdmlkZXJPcHRpb25zIC8vIHJlcXVpcmVkXG4gIFxuLy8gLy8gICAgIG5ldHdvcms6IFwicmlua2VieVwiLCAvLyBvcHRpb25hbFxuLy8gLy8gICAgIGNhY2hlUHJvdmlkZXI6IHRydWUsIC8vIG9wdGlvbmFsXG4vLyAvLyAgICAgcHJvdmlkZXJPcHRpb25zIC8vIHJlcXVpcmVkXG4vLyAvLyAgIH0pO1xuICBcbi8vIC8vICAgY29uc3QgaW5zdGFuY2UgPSBhd2FpdCB3ZWIzTW9kYWwuY29ubmVjdCgpO1xuICBcbi8vIC8vICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5XZWIzUHJvdmlkZXIoaW5zdGFuY2UpO1xuLy8gLy8gICBjb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTtcblxuLy8gLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmF2QmFyKCkge1xuLy8gLy8gICBjb25zdCBbcHJvdmlkZXIsIHNldFByb3ZpZGVyXSA9IHVzZVN0YXRlKCk7XG4vLyAvLyAgIGNvbnN0IFtsaWJyYXJ5LCBzZXRMaWJyYXJ5XSA9IHVzZVN0YXRlKCk7XG4vLyAvLyAgIGNvbnN0IFthY2NvdW50LCBzZXRBY2NvdW50XSA9IHVzZVN0YXRlKCk7XG4vLyAvLyAgIGNvbnN0IFtzaWduYXR1cmUsIHNldFNpZ25hdHVyZV0gPSB1c2VTdGF0ZShcIlwiKTtcbi8vIC8vICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShcIlwiKTtcbi8vIC8vICAgY29uc3QgW2NoYWluSWQsIHNldENoYWluSWRdID0gdXNlU3RhdGUoKTtcbi8vIC8vICAgY29uc3QgW25ldHdvcmssIHNldE5ldHdvcmtdID0gdXNlU3RhdGUoKTtcbi8vIC8vICAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGUoXCJcIik7XG4vLyAvLyAgIGNvbnN0IFtzaWduZWRNZXNzYWdlLCBzZXRTaWduZWRNZXNzYWdlXSA9IHVzZVN0YXRlKFwiXCIpO1xuLy8gLy8gICBjb25zdCBbdmVyaWZpZWQsIHNldFZlcmlmaWVkXSA9IHVzZVN0YXRlKCk7XG4gIFxuXG4vLyAvLyAgIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG4vLyAvLyAgICAgdHJ5IHtcbi8vIC8vICAgICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgd2ViM01vZGFsLmNvbm5lY3QoKTtcbi8vIC8vICAgICAgIGNvbnN0IGxpYnJhcnkgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5XZWIzUHJvdmlkZXIocHJvdmlkZXIpO1xuLy8gLy8gICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBsaWJyYXJ5Lmxpc3RBY2NvdW50cygpO1xuLy8gLy8gICAgICAgY29uc3QgbmV0d29yayA9IGF3YWl0IGxpYnJhcnkuZ2V0TmV0d29yaygpO1xuLy8gLy8gICAgICAgc2V0UHJvdmlkZXIocHJvdmlkZXIpO1xuLy8gLy8gICAgICAgc2V0TGlicmFyeShsaWJyYXJ5KTtcbi8vIC8vICAgICAgIGlmIChhY2NvdW50cykgc2V0QWNjb3VudChhY2NvdW50c1swXSk7XG4vLyAvLyAgICAgICBzZXRDaGFpbklkKG5ldHdvcmsuY2hhaW5JZCk7XG4vLyAvLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vIC8vICAgICAgIHNldEVycm9yKGVycm9yKTtcbi8vIC8vICAgICB9XG4vLyAvLyAgIH07XG5cbi8vIC8vICAgY29uc3QgaGFuZGxlTmV0d29yayA9IChlKSA9PiB7XG4vLyAvLyAgICAgY29uc3QgaWQgPSBlLnRhcmdldC52YWx1ZTtcbi8vIC8vICAgICBzZXROZXR3b3JrKE51bWJlcihpZCkpO1xuLy8gLy8gICB9O1xuXG4vLyAvLyAgIGNvbnN0IGhhbmRsZUlucHV0ID0gKGUpID0+IHtcbi8vIC8vICAgICBjb25zdCBtc2cgPSBlLnRhcmdldC52YWx1ZTtcbi8vIC8vICAgICBzZXRNZXNzYWdlKG1zZyk7XG4vLyAvLyAgIH07XG5cbi8vIC8vICAgY29uc3Qgc3dpdGNoTmV0d29yayA9IGFzeW5jICgpID0+IHtcbi8vIC8vICAgICB0cnkge1xuLy8gLy8gICAgICAgYXdhaXQgbGlicmFyeS5wcm92aWRlci5yZXF1ZXN0KHtcbi8vIC8vICAgICAgICAgbWV0aG9kOiBcIndhbGxldF9zd2l0Y2hFdGhlcmV1bUNoYWluXCIsXG4vLyAvLyAgICAgICAgIHBhcmFtczogW3sgY2hhaW5JZDogdG9IZXgobmV0d29yaykgfV1cbi8vIC8vICAgICAgIH0pO1xuLy8gLy8gICAgIH0gY2F0Y2ggKHN3aXRjaEVycm9yKSB7XG4vLyAvLyAgICAgICBpZiAoc3dpdGNoRXJyb3IuY29kZSA9PT0gNDkwMikge1xuLy8gLy8gICAgICAgICB0cnkge1xuLy8gLy8gICAgICAgICAgIGF3YWl0IGxpYnJhcnkucHJvdmlkZXIucmVxdWVzdCh7XG4vLyAvLyAgICAgICAgICAgICBtZXRob2Q6IFwid2FsbGV0X2FkZEV0aGVyZXVtQ2hhaW5cIixcbi8vIC8vICAgICAgICAgICAgIHBhcmFtczogW25ldHdvcmtQYXJhbXNbdG9IZXgobmV0d29yayldXVxuLy8gLy8gICAgICAgICAgIH0pO1xuLy8gLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gLy8gICAgICAgICAgIHNldEVycm9yKGVycm9yKTtcbi8vIC8vICAgICAgICAgfVxuLy8gLy8gICAgICAgfVxuLy8gLy8gICAgIH1cbi8vIC8vICAgfTtcblxuLy8gLy8gICBjb25zdCBzaWduTWVzc2FnZSA9IGFzeW5jICgpID0+IHtcbi8vIC8vICAgICBpZiAoIWxpYnJhcnkpIHJldHVybjtcbi8vIC8vICAgICB0cnkge1xuLy8gLy8gICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgbGlicmFyeS5wcm92aWRlci5yZXF1ZXN0KHtcbi8vIC8vICAgICAgICAgbWV0aG9kOiBcInBlcnNvbmFsX3NpZ25cIixcbi8vIC8vICAgICAgICAgcGFyYW1zOiBbbWVzc2FnZSwgYWNjb3VudF1cbi8vIC8vICAgICAgIH0pO1xuLy8gLy8gICAgICAgc2V0U2lnbmVkTWVzc2FnZShtZXNzYWdlKTtcbi8vIC8vICAgICAgIHNldFNpZ25hdHVyZShzaWduYXR1cmUpO1xuLy8gLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAvLyAgICAgICBzZXRFcnJvcihlcnJvcik7XG4vLyAvLyAgICAgfVxuLy8gLy8gICB9O1xuXG4vLyAvLyAgIGNvbnN0IHZlcmlmeU1lc3NhZ2UgPSBhc3luYyAoKSA9PiB7XG4vLyAvLyAgICAgaWYgKCFsaWJyYXJ5KSByZXR1cm47XG4vLyAvLyAgICAgdHJ5IHtcbi8vIC8vICAgICAgIGNvbnN0IHZlcmlmeSA9IGF3YWl0IGxpYnJhcnkucHJvdmlkZXIucmVxdWVzdCh7XG4vLyAvLyAgICAgICAgIG1ldGhvZDogXCJwZXJzb25hbF9lY1JlY292ZXJcIixcbi8vIC8vICAgICAgICAgcGFyYW1zOiBbc2lnbmVkTWVzc2FnZSwgc2lnbmF0dXJlXVxuLy8gLy8gICAgICAgfSk7XG4vLyAvLyAgICAgICBzZXRWZXJpZmllZCh2ZXJpZnkgPT09IGFjY291bnQudG9Mb3dlckNhc2UoKSk7XG4vLyAvLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vIC8vICAgICAgIHNldEVycm9yKGVycm9yKTtcbi8vIC8vICAgICB9XG4vLyAvLyAgIH07XG5cbi8vIC8vICAgY29uc3QgcmVmcmVzaFN0YXRlID0gKCkgPT4ge1xuLy8gLy8gICAgIHNldEFjY291bnQoKTtcbi8vIC8vICAgICBzZXRDaGFpbklkKCk7XG4vLyAvLyAgICAgc2V0TmV0d29yayhcIlwiKTtcbi8vIC8vICAgICBzZXRNZXNzYWdlKFwiXCIpO1xuLy8gLy8gICAgIHNldFNpZ25hdHVyZShcIlwiKTtcbi8vIC8vICAgICBzZXRWZXJpZmllZCh1bmRlZmluZWQpO1xuLy8gLy8gICB9O1xuXG4vLyAvLyAgIGNvbnN0IGRpc2Nvbm5lY3QgPSBhc3luYyAoKSA9PiB7XG4vLyAvLyAgICAgYXdhaXQgd2ViM01vZGFsLmNsZWFyQ2FjaGVkUHJvdmlkZXIoKTtcbi8vIC8vICAgICByZWZyZXNoU3RhdGUoKTtcbi8vIC8vICAgfTtcblxuLy8gLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gLy8gICAgIGlmICh3ZWIzTW9kYWwuY2FjaGVkUHJvdmlkZXIpIHtcbi8vIC8vICAgICAgIGNvbm5lY3RXYWxsZXQoKTtcbi8vIC8vICAgICB9XG4vLyAvLyAgIH0sIFtdKTtcblxuLy8gLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIFxuLy8gLy8gICAgIGlmIChwcm92aWRlcj8ub24pIHtcbi8vIC8vICAgICAgIGNvbnN0IGhhbmRsZUFjY291bnRzQ2hhbmdlZCA9IChhY2NvdW50cykgPT4ge1xuLy8gLy8gICAgICAgICBjb25zb2xlLmxvZyhcImFjY291bnRzQ2hhbmdlZFwiLCBhY2NvdW50cyk7XG4vLyAvLyAgICAgICAgIGlmIChhY2NvdW50cykgc2V0QWNjb3VudChhY2NvdW50c1swXSk7XG4vLyAvLyAgICAgICB9O1xuXG4vLyAvLyAgICAgICBjb25zdCBoYW5kbGVDaGFpbkNoYW5nZWQgPSAoX2hleENoYWluSWQpID0+IHtcbi8vIC8vICAgICAgICAgc2V0Q2hhaW5JZChfaGV4Q2hhaW5JZCk7XG4vLyAvLyAgICAgICB9O1xuXG4vLyAvLyAgICAgICBjb25zdCBoYW5kbGVEaXNjb25uZWN0ID0gKCkgPT4ge1xuLy8gLy8gICAgICAgICBjb25zb2xlLmxvZyhcImRpc2Nvbm5lY3RcIiwgZXJyb3IpO1xuLy8gLy8gICAgICAgICBkaXNjb25uZWN0KCk7XG4vLyAvLyAgICAgICB9O1xuXG4vLyAvLyAgICAgICBwcm92aWRlci5vbihcImFjY291bnRzQ2hhbmdlZFwiLCBoYW5kbGVBY2NvdW50c0NoYW5nZWQpO1xuLy8gLy8gICAgICAgcHJvdmlkZXIub24oXCJjaGFpbkNoYW5nZWRcIiwgaGFuZGxlQ2hhaW5DaGFuZ2VkKTtcbi8vIC8vICAgICAgIHByb3ZpZGVyLm9uKFwiZGlzY29ubmVjdFwiLCBoYW5kbGVEaXNjb25uZWN0KTtcblxuLy8gLy8gICAgICAgcmV0dXJuICgpID0+IHtcbi8vIC8vICAgICAgICAgaWYgKHByb3ZpZGVyLnJlbW92ZUxpc3RlbmVyKSB7XG4vLyAvLyAgICAgICAgICAgcHJvdmlkZXIucmVtb3ZlTGlzdGVuZXIoXCJhY2NvdW50c0NoYW5nZWRcIiwgaGFuZGxlQWNjb3VudHNDaGFuZ2VkKTtcbi8vIC8vICAgICAgICAgICBwcm92aWRlci5yZW1vdmVMaXN0ZW5lcihcImNoYWluQ2hhbmdlZFwiLCBoYW5kbGVDaGFpbkNoYW5nZWQpO1xuLy8gLy8gICAgICAgICAgIHByb3ZpZGVyLnJlbW92ZUxpc3RlbmVyKFwiZGlzY29ubmVjdFwiLCBoYW5kbGVEaXNjb25uZWN0KTtcbi8vIC8vICAgICAgICAgfVxuLy8gLy8gICAgICAgfTtcbi8vIC8vICAgICB9XG4vLyAvLyAgIH0sIFtwcm92aWRlcl0pO1xuXG4vLyAvLyAgIHJldHVybiAoXG4vLyAvLyAgICAgPD5cbi8vIC8vICAgICAgICAgPGRpdj5cbi8vIC8vICAgICAgICAgICB7IWFjY291bnQgPyAoXG4vLyAvLyAgICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e2Nvbm5lY3RXYWxsZXR9PkNvbm5lY3QgV2FsbGV0PC9CdXR0b24+XG4vLyAvLyAgICAgICAgICAgKSA6IChcbi8vIC8vICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17ZGlzY29ubmVjdH0+RGlzY29ubmVjdDwvQnV0dG9uPlxuLy8gLy8gICAgICAgICAgICl9XG4vLyAvLyAgICAgICAgIDwvZGl2PlxuXG4vLyAvLyAgICAgICAgICAgPGRpdiBsYWJlbD17YWNjb3VudH0gcGxhY2VtZW50PVwicmlnaHRcIj5cbi8vIC8vICAgICAgICAgICAgIDxwPntgQWNjb3VudDogJHt0cnVuY2F0ZUFkZHJlc3MoYWNjb3VudCl9YH08L3A+XG4vLyAvLyAgICAgICAgICAgPC9kaXY+XG4vLyAvLyAgICAgICAgICAgPHA+e2BOZXR3b3JrIElEOiAke2NoYWluSWQgPyBjaGFpbklkIDogXCJObyBOZXR3b3JrXCJ9YH08L3A+XG4vLyAvLyAgICAgICAgIDwvZGl2PlxuICAgICAgIFxuLy8gLy8gICAgIDwvPlxuLy8gLy8gICApO1xuLy8gLy8gfVxuIl0sIm5hbWVzIjpbInByb3ZpZGVycyIsInRvSGV4IiwidHJ1bmNhdGVBZGRyZXNzIiwiV2ViM01vZGFsIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJldGhlcnMiLCJCaWdOdW1iZXIiLCJXYWxsZXRDb25uZWN0UHJvdmlkZXIiLCJDb2luYmFzZVdhbGxldFNESyIsInN0YXJkdXN0R2VuZXJhdGlvbiIsImNvbnRyYWN0QWRkcmVzcyIsIk1lcmtsZVRyZWUiLCJyZXF1aXJlIiwia2VjY2FrMjU2Iiwic3Rhcmxpc3QiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfSU5GVVJBX0tFWSIsInByb3ZpZGVyT3B0aW9ucyIsImNvaW5iYXNld2FsbGV0IiwicGFja2FnZSIsIm9wdGlvbnMiLCJhcHBOYW1lIiwiaW5mdXJhSWQiLCJ3YWxsZXRjb25uZWN0IiwicnBjIiwiTkVYVF9QVUJMSUNfUlBDX1VSTCIsIk1haW5NaW50IiwibWludEFtb3VudCIsInNldE1pbnRBbW91bnQiLCJpc0Nvbm5lY3RlZCIsInNldElzQ29ubmVjdGVkIiwiaGFzTWV0YW1hc2siLCJzZXRIYXNNZXRhbWFzayIsInVuZGVmaW5lZCIsInNpZ25lciIsInNldFNpZ25lciIsInByb3ZpZGVyIiwic2V0UHJvdmlkZXIiLCJhY2NvdW50Iiwic2V0QWNjb3VudCIsImVycm9yIiwic2V0RXJyb3IiLCJjaGFpbklkIiwic2V0Q2hhaW5JZCIsIm5ldHdvcmsiLCJzZXROZXR3b3JrIiwid2ViM01vZGFsIiwiY2FjaGVQcm92aWRlciIsImNvbm5lY3RXYWxsZXQiLCJldGhlcmV1bSIsInJpbmtlYnlDaGFpbklkIiwid2ViM01vZGFsUHJvdmlkZXIiLCJhY2NvdW50cyIsIndpbmRvdyIsImNvbnNvbGUiLCJsb2ciLCJyZXF1ZXN0IiwibWV0aG9kIiwiY29ubmVjdCIsImFsZXJ0IiwiV2ViM1Byb3ZpZGVyIiwiZ2V0U2lnbmVyIiwiY2hlY2tDb3JyZWN0TmV0d29yayIsInNldENvcnJlY3ROZXR3b3JrIiwiaGFuZGxlRGlzY29ubmVjdCIsImNsZWFyQ2FjaGVkUHJvdmlkZXIiLCJyZWZyZXNoU3RhdGUiLCJoYW5kbGVEZWNyZW1lbnQiLCJoYW5kbGVJbmNyZW1lbnQiLCJoYW5kbGVTdGFybGlzdE1pbnQiLCJsZWFmIiwicHJvb2YiLCJpc1ZhbGlkIiwibm9uY2UiLCJ0eCIsInR4SGFzaCIsInNlbGVjdGVkQWRkcmVzcyIsInN1Y2Nlc3MiLCJzdGF0dXMiLCJtZXJrbGVUcmVlIiwiZ2V0SGV4UHJvb2YiLCJ2ZXJpZnkiLCJyb290IiwiZ2V0VHJhbnNhY3Rpb25Db3VudCIsInRvIiwiY29uZmlnIiwiZnJvbSIsInZhbHVlIiwicGFyc2VJbnQiLCJ3ZWIzIiwidXRpbHMiLCJ0b1dlaSIsIlN0cmluZyIsImNvc3QiLCJ0b1N0cmluZyIsImRhdGEiLCJuZnRDb250cmFjdCIsIm1ldGhvZHMiLCJtaW50U3Rhcmxpc3QiLCJlbmNvZGVBQkkiLCJwYXJhbXMiLCJhIiwiaHJlZiIsInRhcmdldCIsInAiLCJtZXNzYWdlIiwiaGFuZGxlUHVibGljTWludCIsImNvbnRyYWN0IiwicmVzcG9uc2UiLCJXZWIzIiwiZXRoIiwiZ2V0QWNjb3VudHMiLCJsZW5ndGgiLCJDb250cmFjdCIsImFiaSIsIm1pbnRQdWJsaWMiLCJwYXJzZUV0aGVyIiwiZGl2IiwiY2xhc3NOYW1lIiwiYnV0dG9uIiwib25DbGljayIsImlucHV0IiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/MainMint.js\n");

/***/ })

});