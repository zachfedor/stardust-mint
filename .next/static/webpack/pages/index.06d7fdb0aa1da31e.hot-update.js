"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/MainMint.js":
/*!***************************!*\
  !*** ./pages/MainMint.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MainMint; }\n/* harmony export */ });\n/* harmony import */ var _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/format.js */ \"./utils/format.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/web3-provider */ \"./node_modules/@walletconnect/web3-provider/dist/esm/index.js\");\n/* harmony import */ var _coinbase_wallet_sdk__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @coinbase/wallet-sdk */ \"./node_modules/@coinbase/wallet-sdk/dist/index.js\");\n/* harmony import */ var _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../artifacts/contracts/StardustGeneration.sol/StardustGeneration */ \"./artifacts/contracts/StardustGeneration.sol/StardustGeneration.json\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// import Head from \"next/head\";\n// import Image from \"next/image\";\n// import styles from \"../styles/MainMint.module.css\";\n// import WalletConnectProvider from '@walletconnect/web3-provider'\n\n// import WalletLink from 'walletlink'\n// import Web3Modal from 'web3modal'\n// import { ellipseAddress, getChainData } from '../lib/utilities'\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nvar _s = $RefreshSig$();\nvar contractAddress = \"0x3A6E628f8b6c83cB409c2c67cC42ceeCBA219046\";\nvar providerOptions = {\n    coinbasewallet: {\n        package: _coinbase_wallet_sdk__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n        options: {\n            appName: \"Stardust Generation\",\n            infuraId: \"https://rinkeby.infura.io/v3/a530052483b945b182cb75fafdd4286f\"\n        }\n    },\n    walletconnect: {\n        package: _walletconnect_web3_provider__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n        options: {\n            rpc: {\n                42: process.env.NEXT_PUBLIC_RPC_URL\n            }\n        }\n    }\n};\nfunction MainMint() {\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(1), mintAmount1 = ref[0], setMintAmount = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false), isConnected = ref1[0], setIsConnected = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false), hasMetamask = ref2[0], setHasMetamask = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(undefined), signer = ref3[0], setSigner = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), provider1 = ref4[0], setProvider = ref4[1];\n    // const [library, setLibrary] = useState();\n    var ref5 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), account = ref5[0], setAccount = ref5[1];\n    var ref6 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\"), error = ref6[0], setError = ref6[1];\n    var ref7 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), chainId1 = ref7[0], setChainId = ref7[1];\n    var ref8 = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(), network = ref8[0], setNetwork = ref8[1];\n    var web3Modal;\n    if (true) {\n        web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_3___default())({\n            network: 'rinkeby',\n            cacheProvider: true,\n            providerOptions: providerOptions\n        });\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(function() {\n        if (provider1 !== \"undefined\") {\n            setHasMetamask(true);\n        }\n    });\n    var connectWallet = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var ethereum, chainId, rinkebyChainId, web3ModalProvider, accounts, provider;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        ethereum = window.ethereum;\n                        if (ethereum) {\n                            _ctx.next = 5;\n                            break;\n                        }\n                        console.log('Metamask not detected');\n                        return _ctx.abrupt(\"return\");\n                    case 5:\n                        _ctx.next = 7;\n                        return ethereum.request({\n                            method: 'eth_chainId'\n                        });\n                    case 7:\n                        chainId = _ctx.sent;\n                        console.log('Connected to chain:' + chainId);\n                        rinkebyChainId = '0x4';\n                        _ctx.next = 12;\n                        return web3Modal.connect();\n                    case 12:\n                        web3ModalProvider = _ctx.sent;\n                        if (!(chainId !== rinkebyChainId)) {\n                            _ctx.next = 16;\n                            break;\n                        }\n                        alert('You are not connected to the Rinkeby Testnet!');\n                        return _ctx.abrupt(\"return\");\n                    case 16:\n                        _ctx.next = 18;\n                        return ethereum.request({\n                            method: 'eth_requestAccounts'\n                        });\n                    case 18:\n                        accounts = _ctx.sent;\n                        provider = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.providers.Web3Provider(web3ModalProvider);\n                        setSigner(provider.getSigner());\n                        console.log('Found account', accounts[0]);\n                        setAccount(accounts[0]);\n                        setIsConnected(true);\n                        _ctx.next = 29;\n                        break;\n                    case 26:\n                        _ctx.prev = 26;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log('Error connecting to metamask', _ctx.t0);\n                    case 29:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    26\n                ]\n            ]);\n        }));\n        return function connectWallet() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    // Checks if wallet is connected to the correct network\n    var checkCorrectNetwork = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var ethereum, chainId, rinkebyChainId;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        ethereum = window.ethereum;\n                        _ctx.next = 3;\n                        return ethereum.request({\n                            method: 'eth_chainId'\n                        });\n                    case 3:\n                        chainId = _ctx.sent;\n                        console.log('Connected to chain:' + chainId);\n                        rinkebyChainId = '0x4';\n                        if (chainId !== rinkebyChainId) {\n                            setCorrectNetwork(false);\n                        } else {\n                            setCorrectNetwork(true);\n                        }\n                    case 7:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function checkCorrectNetwork() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var handleDisconnect = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.next = 2;\n                        return web3Modal.clearCachedProvider();\n                    case 2:\n                        refreshState();\n                    case 3:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function handleDisconnect() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    // when we click mint amount\n    var handleDecrement = function() {\n        if (mintAmount1 <= 1) return;\n        setMintAmount(mintAmount1 - 1);\n    };\n    var handleIncrement = function() {\n        //for max number of mints this case is 3\n        if (mintAmount1 >= 7) return;\n        setMintAmount(mintAmount1 + 1);\n    };\n    var refreshState = function() {\n        setAccount();\n        setChainId();\n        setSigner();\n        setNetwork(\"\");\n    };\n    function handleStarlistMint(provider, mintAmount) {\n        return _handleStarlistMint.apply(this, arguments);\n    }\n    function _handleStarlistMint() {\n        _handleStarlistMint = // pass in proof? \n        _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(provider, mintAmount) {\n            var contract, response;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (!(typeof window.ethereum !== \"undefined\")) {\n                            _ctx.next = 14;\n                            break;\n                        }\n                        contract = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.Contract(contractAddress, _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__.abi, signer);\n                        _ctx.prev = 2;\n                        _ctx.next = 5;\n                        return contract.mintStarlist(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(mintAmount), {\n                            value: ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.utils.parseEther((0.04 * mintAmount).toString())\n                        });\n                    case 5:\n                        response = _ctx.sent;\n                        console.log(\"response: \", response);\n                        _ctx.next = 12;\n                        break;\n                    case 9:\n                        _ctx.prev = 9;\n                        _ctx.t0 = _ctx[\"catch\"](2);\n                        console.log(\"error: \", _ctx.t0);\n                    case 12:\n                        _ctx.next = 15;\n                        break;\n                    case 14:\n                        {\n                            console.log(\"Please install MetaMask\");\n                        }\n                    case 15:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    2,\n                    9\n                ]\n            ]);\n        }));\n        return _handleStarlistMint.apply(this, arguments);\n    }\n    function handleReservelistMint(provider, mintAmount) {\n        return _handleReservelistMint.apply(this, arguments);\n    }\n    function _handleReservelistMint() {\n        _handleReservelistMint = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(provider, mintAmount) {\n            var contract, response;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (!(typeof window.ethereum !== \"undefined\")) {\n                            _ctx.next = 14;\n                            break;\n                        }\n                        contract = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.Contract(contractAddress, _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__.abi, signer);\n                        _ctx.prev = 2;\n                        _ctx.next = 5;\n                        return contract.mintReservelist(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(mintAmount), {\n                            value: ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.utils.parseEther((0.04 * mintAmount).toString())\n                        });\n                    case 5:\n                        response = _ctx.sent;\n                        console.log(\"response: \", response);\n                        _ctx.next = 12;\n                        break;\n                    case 9:\n                        _ctx.prev = 9;\n                        _ctx.t0 = _ctx[\"catch\"](2);\n                        console.log(\"error: \", _ctx.t0);\n                    case 12:\n                        _ctx.next = 15;\n                        break;\n                    case 14:\n                        {\n                            console.log(\"Please install MetaMask\");\n                        }\n                    case 15:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    2,\n                    9\n                ]\n            ]);\n        }));\n        return _handleReservelistMint.apply(this, arguments);\n    }\n    var handlePublicMint = function() {\n        var _ref = _asyncToGenerator(_Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(provider, mintAmount) {\n            var web3, accounts, nftContract, contract1, response;\n            return _Users_techchelle_Development_StardustSociety_mint_page_2_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        web3 = new Web3(provider);\n                        _ctx.next = 3;\n                        return web3.eth.getAccounts();\n                    case 3:\n                        accounts = _ctx.sent;\n                        if (accounts.length) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", {\n                            success: false,\n                            status: 'To be able to mint, you need to connect your wallet'\n                        });\n                    case 6:\n                        nftContract = new web3.eth.Contract(contract.abi, config.contractAddress);\n                        if (!(typeof window.ethereum !== \"undefined\")) {\n                            _ctx.next = 21;\n                            break;\n                        }\n                        contract1 = new ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.Contract(contractAddress, _artifacts_contracts_StardustGeneration_sol_StardustGeneration__WEBPACK_IMPORTED_MODULE_7__.abi, signer);\n                        _ctx.prev = 9;\n                        _ctx.next = 12;\n                        return contract1.mintPublic(ethers__WEBPACK_IMPORTED_MODULE_8__.BigNumber.from(mintAmount), {\n                            value: ethers__WEBPACK_IMPORTED_MODULE_8__.ethers.utils.parseEther((0.04 * mintAmount).toString())\n                        });\n                    case 12:\n                        response = _ctx.sent;\n                        console.log(\"response: \", response);\n                        _ctx.next = 19;\n                        break;\n                    case 16:\n                        _ctx.prev = 16;\n                        _ctx.t0 = _ctx[\"catch\"](9);\n                        console.log(\"error: \", _ctx.t0);\n                    case 19:\n                        _ctx.next = 22;\n                        break;\n                    case 21:\n                        {\n                            console.log(\"Please install MetaMask\");\n                        }\n                    case 22:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    9,\n                    16\n                ]\n            ]);\n        // try {\n        //   await nftContract.methods.mintPublic( mintAmount ).estimateGas({\n        //     from: accounts[0],\n        //     value: valueBN.toString()\n        //   });\n        //   return {\n        //     success: true,\n        //     status: `Tx went through`\n        //     // status: (\n        //     //   <a href={`https://etherscan.io/tx/${txHash}`} target=\"_blank\">\n        //     //     <p>✅  Check out your transaction on Etherscan:</p>\n        //     //     <p>{`https://etherscan.io/tx/${txHash}`}</p>\n        //     //   </a>\n        //     // )\n        //   }\n        // } catch (error) {\n        //   return {\n        //     success: false,\n        //     status: `😞  Oh my, something went wrong` + error.message\n        //   }\n        // }\n        }));\n        return function handlePublicMint(provider, mintAmount) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    return(// <div className=\"main-mint\">\n    //   {hasMetamask ? (\n    //     isConnected ? (\n    //       <button onClick={disconnectWallet}>Disconnect</button>\n    //     ) : (\n    //       <button onClick={connectWallet}>Connect Wallet</button>\n    //     )\n    //   ) : (\n    //     \"Please install metamask\"\n    //   )}\n    // </div>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"text-center mt-8\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    children: hasMetamask ? isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                        onClick: handleDisconnect,\n                        children: \"Disconnect Wallet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                        lineNumber: 241,\n                        columnNumber: 15\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                        onClick: connectWallet,\n                        children: \"Connect Wallet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                        lineNumber: 245,\n                        columnNumber: 15\n                    }, this) : \"Please install metamask\"\n                }, void 0, false, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 238,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                lineNumber: 237,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"main-mint\",\n                children: isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"counter\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                    className: \"decrement-btn\",\n                                    onClick: handleDecrement\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 258,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", {\n                                    className: \"input\",\n                                    type: \"number\",\n                                    value: mintAmount1\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 262,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                    className: \"increment-btn\",\n                                    onClick: handleIncrement\n                                }, void 0, false, {\n                                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                                    lineNumber: 263,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                            lineNumber: 257,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                            className: \"mint-button\",\n                            onClick: handlePublicMint,\n                            children: [\n                                \" \",\n                                \"MINT\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                            lineNumber: 268,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 256,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {}, void 0, false, {\n                    fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                    lineNumber: 274,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/techchelle/Development/StardustSociety/mint-page-2/pages/MainMint.js\",\n                lineNumber: 252,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true));\n}; // // import { useEffect, useState } from \"react\";\n // // // import { networkParams } from \"./networks\";\n // // import { toHex, truncateAddress } from \"../utils/format.js\";\n // // import { providerOptions, networkParams } from \"../utils/web3Wallet.js\";\n // import { ethers, BigNumber, providers } from \"ethers\";\n // import Web3Modal from \"web3modal\";\n // import CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n // import WalletConnect from \"@walletconnect/web3-provider\";\n // import { useRef, useEffect, useState } from \"react\";\n // // import { providers } from \"ethers\";\n // // import config from \"../dapp.config.js\";\n // import StardustGeneration from \"../artifacts/contracts/StardustGeneration.sol/StardustGeneration.json\";\n // const stardustAddress = \"0x3A6E628f8b6c83cB409c2c67cC42ceeCBA219046\";\n // export default function MainMint() {\n //   const [connectedWallet, setConnectedWallet] = useState(false);\n //   const [mintAmount, setMintAmount] = useState(1);\n //   const web3ModalRef = useRef(); // return the object with key named current\n //   // providers and signer  =>\n //   // providers is used for to get data from sc\n //   // signer is used for to sign data / set the data to sc\n //   const getSignerOrProvider = async (needSigner = false) => {\n //     const provider = await web3ModalRef.current.connect();\n //     const web3Provider = new providers.Web3Provider(provider);\n //     const { chainId } = await web3Provider.getNetwork();\n //     if (chainId !== 4) {\n //       alert(\"USE RINKEEBY NETWORK\");\n //       throw new Error(\"Change network to Rinkeby\");\n //     }\n //     if (needSigner) {\n //       const signer = web3Provider.getSigner();\n //       return signer;\n //     }\n //     return provider;\n //   };\n //   const connectWallet = async () => {\n //     try {\n //       await getSignerOrProvider();\n //       setConnectedWallet(true);\n //     } catch (error) {\n //       console.log(\" error\", error);\n //     }\n //   };\n //   const disconnect = async () => {\n //     await web3Modal.clearCachedProvider();\n //     refreshState();\n //   };\n //   useEffect(() => {\n //     web3ModalRef.current = new Web3Modal({\n //       network: \"rinkeby\",\n //       providerOptions: {\n //         coinbasewallet: {\n //           package: CoinbaseWalletSDK, \n //           options: {\n //             appName: \"Stardust Generation\",\n //             infuraId: process.env.NEXT_PUBLIC_INFURA_KEY \n //           }\n //         },\n //         walletconnect: {\n //           package: WalletConnect, \n //           options: {\n //             infuraId: process.env.NEXT_PUBLIC_INFURA_KEY \n //           } \n //         }\n //       },\n //     });\n //   }, []);\n //   // when we click mint amount\n //   const handleDecrement = () => {\n //     if (mintAmount <= 1) return;\n //     setMintAmount(mintAmount - 1);\n //   };\n //   const handleIncrement = () => {\n //     //for max number of mints this case is 3\n //     if (mintAmount >= 7) return;\n //     setMintAmount(mintAmount + 1);\n //   };\n //   async function handlePublicMint() {\n //     if (connectedWallet) {\n //       //way for ethers to connect to blockchain\n //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n //       //when making transaction signer\n //       const signer = provider.getSigner();\n //       const contract = new ethers.Contract(\n //         //change these\n //         stardustAddress,\n //         StardustGeneration.abi,\n //         signer\n //       );\n //       try {\n //         const response = await contract.PublicMint(BigNumber.from(mintAmount), {\n //           value: ethers.utils.parseEther((0.04 * mintAmount).toString()),\n //         });\n //         console.log(\"response: \", response);\n //       } catch (err) {\n //         console.log(\"error: \", err);\n //       }\n //     }\n //   }\n //   return (\n //     <>\n //       <div className=\"text-center mt-8\">\n //         <div>\n //            {!connectedWallet ? (\n //             <button onClick={connectWallet}>Connect Wallet</button>\n //           ) : (\n //             <button onClick={disconnect}>Disconnect</button>\n //           )}\n //         </div>\n //       </div>\n //       <div className=\"main-mint\">\n //       {/* <h1>Stardust </h1>\n //       <p> mint your stardust</p> */}\n //       {connectedWallet ? (\n //         <div>\n //           <div className=\"counter\">\n //             <button\n //               className=\"decrement-btn\"\n //               onClick={handleDecrement}\n //             ></button>\n //             <input className=\"input\" type=\"number\" value={mintAmount} />\n //             <button\n //               className=\"increment-btn\"\n //               onClick={handleIncrement}\n //             ></button>\n //           </div>\n //           <button className=\"mint-button\" onClick={handlePublicMint}>\n //             {\" \"}\n //             MINT\n //           </button>\n //         </div>\n //       ) : (\n //         <p></p>\n //       )}\n //     </div>\n //     </>\n //   );\n // }\n // // const web3Modal = new Web3Modal({\n // //   //   network: \"mainnet\", // optional\n // //   //   cacheProvider: true, // optional\n // //   //   providerOptions // required\n // //     network: \"rinkeby\", // optional\n // //     cacheProvider: true, // optional\n // //     providerOptions // required\n // //   });\n // //   const instance = await web3Modal.connect();\n // //   const provider = new ethers.providers.Web3Provider(instance);\n // //   const signer = provider.getSigner();\n // // export default function NavBar() {\n // //   const [provider, setProvider] = useState();\n // //   const [library, setLibrary] = useState();\n // //   const [account, setAccount] = useState();\n // //   const [signature, setSignature] = useState(\"\");\n // //   const [error, setError] = useState(\"\");\n // //   const [chainId, setChainId] = useState();\n // //   const [network, setNetwork] = useState();\n // //   const [message, setMessage] = useState(\"\");\n // //   const [signedMessage, setSignedMessage] = useState(\"\");\n // //   const [verified, setVerified] = useState();\n // //   const connectWallet = async () => {\n // //     try {\n // //       const provider = await web3Modal.connect();\n // //       const library = new ethers.providers.Web3Provider(provider);\n // //       const accounts = await library.listAccounts();\n // //       const network = await library.getNetwork();\n // //       setProvider(provider);\n // //       setLibrary(library);\n // //       if (accounts) setAccount(accounts[0]);\n // //       setChainId(network.chainId);\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const handleNetwork = (e) => {\n // //     const id = e.target.value;\n // //     setNetwork(Number(id));\n // //   };\n // //   const handleInput = (e) => {\n // //     const msg = e.target.value;\n // //     setMessage(msg);\n // //   };\n // //   const switchNetwork = async () => {\n // //     try {\n // //       await library.provider.request({\n // //         method: \"wallet_switchEthereumChain\",\n // //         params: [{ chainId: toHex(network) }]\n // //       });\n // //     } catch (switchError) {\n // //       if (switchError.code === 4902) {\n // //         try {\n // //           await library.provider.request({\n // //             method: \"wallet_addEthereumChain\",\n // //             params: [networkParams[toHex(network)]]\n // //           });\n // //         } catch (error) {\n // //           setError(error);\n // //         }\n // //       }\n // //     }\n // //   };\n // //   const signMessage = async () => {\n // //     if (!library) return;\n // //     try {\n // //       const signature = await library.provider.request({\n // //         method: \"personal_sign\",\n // //         params: [message, account]\n // //       });\n // //       setSignedMessage(message);\n // //       setSignature(signature);\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const verifyMessage = async () => {\n // //     if (!library) return;\n // //     try {\n // //       const verify = await library.provider.request({\n // //         method: \"personal_ecRecover\",\n // //         params: [signedMessage, signature]\n // //       });\n // //       setVerified(verify === account.toLowerCase());\n // //     } catch (error) {\n // //       setError(error);\n // //     }\n // //   };\n // //   const refreshState = () => {\n // //     setAccount();\n // //     setChainId();\n // //     setNetwork(\"\");\n // //     setMessage(\"\");\n // //     setSignature(\"\");\n // //     setVerified(undefined);\n // //   };\n // //   const disconnect = async () => {\n // //     await web3Modal.clearCachedProvider();\n // //     refreshState();\n // //   };\n // //   useEffect(() => {\n // //     if (web3Modal.cachedProvider) {\n // //       connectWallet();\n // //     }\n // //   }, []);\n // //   useEffect(() => {\n // //     if (provider?.on) {\n // //       const handleAccountsChanged = (accounts) => {\n // //         console.log(\"accountsChanged\", accounts);\n // //         if (accounts) setAccount(accounts[0]);\n // //       };\n // //       const handleChainChanged = (_hexChainId) => {\n // //         setChainId(_hexChainId);\n // //       };\n // //       const handleDisconnect = () => {\n // //         console.log(\"disconnect\", error);\n // //         disconnect();\n // //       };\n // //       provider.on(\"accountsChanged\", handleAccountsChanged);\n // //       provider.on(\"chainChanged\", handleChainChanged);\n // //       provider.on(\"disconnect\", handleDisconnect);\n // //       return () => {\n // //         if (provider.removeListener) {\n // //           provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n // //           provider.removeListener(\"chainChanged\", handleChainChanged);\n // //           provider.removeListener(\"disconnect\", handleDisconnect);\n // //         }\n // //       };\n // //     }\n // //   }, [provider]);\n // //   return (\n // //     <>\n // //         <div>\n // //           {!account ? (\n // //             <Button onClick={connectWallet}>Connect Wallet</Button>\n // //           ) : (\n // //             <Button onClick={disconnect}>Disconnect</Button>\n // //           )}\n // //         </div>\n // //           <div label={account} placement=\"right\">\n // //             <p>{`Account: ${truncateAddress(account)}`}</p>\n // //           </div>\n // //           <p>{`Network ID: ${chainId ? chainId : \"No Network\"}`}</p>\n // //         </div>\n // //     </>\n // //   );\n // // }\n_s(MainMint, \"QUytILGEo1ieGBRv2eWKmha6U54=\");\n_c = MainMint;\nvar _c;\n$RefreshReg$(_c, \"MainMint\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/MainMint.js\n");

/***/ })

});